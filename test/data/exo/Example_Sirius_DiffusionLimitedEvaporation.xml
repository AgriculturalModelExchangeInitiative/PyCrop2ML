<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ModelUnit PUBLIC " " "https://raw.githubusercontent.com/cyrillemidingoyi/PyCropML/render_csharp/test/data/ModelUnit.dtd">
<ModelUnit modelid="1" name="DiffusionLimitedEvaporation" timestep="1" version="1.0">
    <Description>
        <Title>DiffusionLimitedEvaporation Model</Title>
        <Authors>Pierre Martre</Authors>
        <Institution>INRA Montpellier</Institution>
        <Reference>absolutely non</Reference>
        <Abstract>Calculate Energy Balance </Abstract>
    </Description>
    <Inputs>

        <Input name="deficitOnTopLayers" description=""  datatype="DOUBLE" default="5341" min="0" max="10000" unit="g/m²d" uri="some url" inputtype="variable"/>
        <Input name="soilDiffusionConstant" description="soilDiffusionConstant" parametercategory="soil" datatype="DOUBLE" default="4.2" min="0" max="10" unit="" uri="some url" inputtype="parameter"/>
     
    </Inputs>
    <Outputs>

        <Output name="diffusionLimitedEvaporation" description=" " datatype="DOUBLE" min="0" max="5000"  unit="g/m²d" uri="some url"/>
   	
    </Outputs>
    
    <Algorithm language="C#" platform=""><![CDATA[
        if (deficitOnTopLayers / 1000 <= 0)
        	diffusionLimitedEvaporation = 8.3 * 1000;
        else
        {
        	if (deficitOnTopLayers / 1000 < 25)
            	diffusionLimitedEvaporation = (2 * soilDiffusionConstant * soilDiffusionConstant / (deficitOnTopLayers / 1000)) * 1000;
           	else
                diffusionLimitedEvaporation = 0;
         }
   
      ]]>
     </Algorithm>    
    
    <Algorithm language="cython" platform=""><![CDATA[
    	if (deficitOnTopLayers / 1000.0 <= 0):
        	diffusionLimitedEvaporation = 8.3 * 1000
        else:
        	if (deficitOnTopLayers / 1000 < 25):
	            diffusionLimitedEvaporation = (2 * soilDiffusionConstant * soilDiffusionConstant / (deficitOnTopLayers / 1000.0)) * 1000.0
            else:
                diffusionLimitedEvaporation = 0

      ]]>
     </Algorithm>

    <Algorithm language="Java" platform=""><![CDATA[
    
        if (deficitOnTopLayers / 1000 <= 0)
        	diffusionLimitedEvaporation = 8.3 * 1000;
        else
        {
        	if (deficitOnTopLayers / 1000 < 25)
            	diffusionLimitedEvaporation = (2 * soilDiffusionConstant * soilDiffusionConstant / (deficitOnTopLayers / 1000)) * 1000;
           	else
                diffusionLimitedEvaporation = 0;
         }     
     
       ]]>
     </Algorithm>
     
     <Algorithm language="C++" platform=""><![CDATA[

        if (deficitOnTopLayers / 1000 <= 0)
        	diffusionLimitedEvaporation = 8.3 * 1000;
        else
        {
        	if (deficitOnTopLayers / 1000 < 25)
            	diffusionLimitedEvaporation = (2 * soilDiffusionConstant * soilDiffusionConstant / (deficitOnTopLayers / 1000)) * 1000;
           	else
                diffusionLimitedEvaporation = 0;
         }    
     
       ]]>
     </Algorithm>
     
     <Algorithm language="Fortran" platform=""><![CDATA[
     	IF (deficitOnTopLayers / 1000 .LE. 0.0) THEN
			diffusionLimitedEvaporation = 8.3 * 1000
		ELSE IF (deficitOnTopLayers / 1000 .LE. 25.0) THEN
			diffusionLimitedEvaporation = (2 * soilDiffusionConstant * soilDiffusionConstant / (deficitOnTopLayers / 1000)) * 1000
		ELSE
			diffusionLimitedEvaporation = 0
		ENDIF
         
       ]]>
     </Algorithm>
      <Parametersets>
        <Parameterset name="set1" description="some values in there" >
        	<Param name="soilDiffusionConstant">4.2</Param>

        </Parameterset>

     </Parametersets>
     <Testsets>
        <Testset name="first" parameterset = "set1" description="some values in there" >
        	<Test name ="test1">
        		<InputValue name="deficitOnTopLayers">5341</InputValue>
				<OutputValue name="diffusionLimitedEvaporation" precision ="3"> 6605.505</OutputValue>
	
        	</Test>

        </Testset>
      </Testsets>
</ModelUnit>